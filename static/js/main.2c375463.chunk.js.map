{"version":3,"sources":["shared/constants/routeConstants.js","components/PrivateRouter/PrivateRouter.js","components/Button/Button.js","components/Form/Form.js","components/Alert/Alert.js","components/PasswordInput/PasswordInput.js","firebase.js","services/firebaseService.js","pages/Register/Register.js","pages/Signin/Signin.js","shared/date/date.js","components/CalendarCard/CalendarCard.js","components/Calendar/enableScroll.js","components/Calendar/endlessScrolling.js","components/Calendar/Calendar.js","components/Task/Task.js","components/TaskList/TaskList.js","pages/Tasker/Tasker.js","components/TaskEditor/TaskEditor.js","img/arrow.svg","components/DatepickerHeader/DatepickerHeader.js","components/DatepickerTableButton/DatepickerTableButton.js","components/DatepickerTable/DatepickerTable.js","components/Datepicker/Datepicker.js","components/DateEditor/DateEditor.js","components/Actions/Actions.js","pages/TaskPage/TaskPage.js","components/Loader/Loader.js","components/LoadingRoute/LoadingRoute.js","App.js","index.js"],"names":["Object","freeze","SIGNIN","REGISTER","TASKER","TASK","routeConstants","PrivateRoute","Component","component","currentTask","setCurrentTask","currentDate","setCurrentDate","currentUser","tasks","setTasks","render","to","Button","value","disabled","className","type","Form","children","onSubmit","useState","email","password","user","setUser","handleChange","target","name","event","placeholder","onChange","required","Alert","PasswordInput","app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","auth","register","createUserWithEmailAndPassword","signin","signInWithEmailAndPassword","writeUserData","jsonStr","JSON","stringify","ref","concat","uid","set","Register","error","setError","loading","setLoading","confirmPassword","setConfirmPassword","history","useHistory","handleSubmit","a","preventDefault","push","message","Signin","startOfDay","date","setHours","setMinutes","setSeconds","setMilliseconds","getNameDay","getDay","getNameMonth","getMonth","addZero","CalendarCard","onClick","checkPendingTasks","checkFulfilledTasks","createDayClass","getDate","enableScroll","toLeft","deltaY","scrollLeft","hiddenWidth","scrollWidth","clientWidth","toRight","createDates","stopDay","result","Date","setDate","Calendar","initDate","dates","setDates","handleClick","useCallback","some","item","checked","dayClass","cards","map","handleWheel","document","querySelector","maxScrollLeft","lastDate","length","lastDageCopy","newDates","addDates","useEffect","addEventListener","Task","task","onDoubleClick","title","TaskList","taskList","timeoutId","useRef","current","setTimeout","handleDoubleClick","pulledTask","find","newTasks","filter","clearTimeout","forEach","i","toString","Tasker","handleSignout","signOut","TaskEditor","DatepickerHeader","setMonth","src","arrow","alt","getFullYear","DatepickerTableButton","checkedDate","toDay","DatepickerTable","calendarDate","setCheckedDate","lastDay","firstDay","calendar","week","btnDate","generateNumber","Math","random","fillStartMonthByEmpty","tmpDate","slice","fillMonthByDate","fillEndMonthByEmpty","Datepicker","data","id","DateEditor","datepickerDisplay","setDatepickerDisplay","dateInfoContent","Actions","btnName","TaskPage","initTask","description","setTask","handleBackBtn","Loader","LoadingRoute","setCurrentUser","callback","once","snapshot","response","val","parsedData","parse","key","readUserData","onAuthStateChanged","routerConstants","App","basename","exact","path","ReactDOM"],"mappings":"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","file":"static/js/main.2c375463.chunk.js","sourcesContent":["export default Object.freeze({\n  SIGNIN: '/signin',\n  REGISTER: '/register',\n  TASKER: '/',\n  TASK: '/task',\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\nimport routeConstants from '../../shared/constants/routeConstants';\n\nconst { SIGNIN } = routeConstants;\n\nfunction PrivateRoute({\n  component: Component,\n  currentTask,\n  setCurrentTask,\n  currentDate,\n  setCurrentDate,\n  currentUser,\n  tasks,\n  setTasks,\n}) {\n  const render = () => {\n    const component = (\n      <Component\n        currentTask={currentTask}\n        setCurrentTask={setCurrentTask}\n        currentDate={currentDate}\n        setCurrentDate={setCurrentDate}\n        currentUser={currentUser}\n        tasks={tasks}\n        setTasks={setTasks}\n      />\n    );\n\n    return currentUser ? component : <Redirect to={SIGNIN} />;\n  };\n\n  return <Route render={render} />;\n}\n\nPrivateRoute.propTypes = {\n  component: PropTypes.func,\n  currentTask: PropTypes.object,\n  setCurrentTask: PropTypes.func,\n  currentDate: PropTypes.object,\n  setCurrentDate: PropTypes.func,\n  currentUser: PropTypes.object,\n  tasks: PropTypes.array,\n  setTasks: PropTypes.func,\n};\n\nexport default PrivateRoute;\n","import './Button.scss';\nimport PropTypes from 'prop-types';\n\nfunction Button({ value, disabled }) {\n  return <input className=\"button\" type=\"submit\" value={value} disabled={disabled} />;\n}\n\nButton.propTypes = {\n  value: PropTypes.string,\n  disabled: PropTypes.bool,\n};\n\nexport default Button;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './Form.scss';\n\nfunction Form({ children, onSubmit }) {\n  const [user, setUser] = useState({\n    email: '',\n    password: '',\n  });\n\n  const handleChange = ({ target: { name, value } }) => {\n    setUser({ ...user, ...{ [name]: value } });\n  };\n\n  return (\n    <form className=\"form\" onSubmit={(event) => onSubmit(user, event)}>\n      <input\n        className=\"form__email\"\n        type=\"email\"\n        name=\"email\"\n        value={user.email}\n        placeholder=\"Email\"\n        onChange={handleChange}\n        required\n      />\n      <input\n        className=\"form__password\"\n        type=\"password\"\n        name=\"password\"\n        value={user.password}\n        placeholder=\"Password\"\n        onChange={handleChange}\n        required\n      />\n      {children}\n    </form>\n  );\n}\n\nForm.propTypes = {\n  children: PropTypes.node.isRequired || PropTypes.array,\n  onSubmit: PropTypes.func,\n};\n\nexport default Form;\n","import './Alert.scss';\nimport PropTypes from 'prop-types';\n\nfunction Alert({ value }) {\n  if (value) {\n    return <div className=\"alert\">{value}</div>;\n  }\n\n  return null;\n}\n\nAlert.propTypes = {\n  value: PropTypes.string,\n};\n\nexport default Alert;\n","import './PasswordInput.scss';\nimport PropTypes from 'prop-types';\n\nfunction PasswordInput({ value, placeholder, onChange }) {\n  return (\n    <input\n      className=\"password-input\"\n      type=\"password\"\n      value={value}\n      onChange={onChange}\n      placeholder={placeholder}\n    />\n  );\n}\n\nPasswordInput.propTypes = {\n  value: PropTypes.string,\n  placeholder: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default PasswordInput;\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nconst app = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n});\n\nexport const database = app.database();\nexport const auth = app.auth();\nexport default app;\n","import { auth, database } from '../firebase';\n\nexport function register(email, password) {\n  return auth.createUserWithEmailAndPassword(email, password);\n}\n\nexport function signin(email, password) {\n  return auth.signInWithEmailAndPassword(email, password);\n}\n\nexport function signout() {\n  return auth.signOut();\n}\n\nexport function readUserData(user, setTasks) {\n  if (!user) {\n    return;\n  }\n  database.ref('users/'.concat(user.uid)).once('value', (snapshot) => {\n    const response = snapshot.val();\n    if (response instanceof Object) {\n      if (response.tasks) {\n        const parsedData = JSON.parse(response.tasks, (key, value) => {\n          if (key === 'date') return new Date(value);\n          return value;\n        });\n        setTasks(parsedData);\n      }\n    }\n  });\n}\n\nexport function writeUserData(user, tasks) {\n  const jsonStr = JSON.stringify(tasks);\n  database.ref('users/'.concat(user.uid)).set({ tasks: jsonStr });\n}\n\nexport function unsubscribe(callback) {\n  return auth.onAuthStateChanged(callback);\n}\n","import { Link, useHistory } from 'react-router-dom';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../../components/Button/Button';\nimport Form from '../../components/Form/Form';\nimport './Register.scss';\nimport Alert from '../../components/Alert/Alert';\nimport PasswordInput from '../../components/PasswordInput/PasswordInput';\nimport { register } from '../../services/firebaseService';\nimport routeConstants from '../../shared/constants/routeConstants';\n\nconst { TASKER, SIGNIN } = routeConstants;\n\nfunction Register() {\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const history = useHistory();\n\n  const handleSubmit = async ({ email, password }, event) => {\n    event.preventDefault();\n    if (password !== confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n\n    try {\n      setError('');\n      setLoading(true);\n      await register(email, password);\n      history.push(TASKER);\n    } catch ({ message }) {\n      setError(message);\n      setLoading(false);\n    }\n  };\n\n  const handleChange = (event) => setConfirmPassword(event.target.value);\n\n  return (\n    <div className=\"register\">\n      <div className=\"register__nav\">\n        <Link className=\"link\" to={SIGNIN}>\n          <div className=\"register__arrow arrow\" />\n          Sign in\n        </Link>\n      </div>\n      <Alert value={error} />\n      <Form onSubmit={handleSubmit}>\n        <PasswordInput\n          value={confirmPassword}\n          onChange={handleChange}\n          placeholder=\"Confirm password\"\n        />\n        <Button disabled={loading} value=\"Register\" />\n      </Form>\n    </div>\n  );\n}\n\nRegister.propTypes = {\n  setCurrentUser: PropTypes.func,\n};\n\nexport default Register;\n","import { Link, useHistory } from 'react-router-dom';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport 'firebase/auth';\nimport Form from '../../components/Form/Form';\nimport Alert from '../../components/Alert/Alert';\nimport './Signin.scss';\nimport Button from '../../components/Button/Button';\nimport { signin } from '../../services/firebaseService';\nimport routeConstants from '../../shared/constants/routeConstants';\n\nconst { TASKER } = routeConstants;\n\nfunction Signin() {\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  const handleSubmit = async ({ email, password }, event) => {\n    event.preventDefault();\n\n    try {\n      setError('');\n      setLoading(true);\n      await signin(email, password);\n      history.push(TASKER);\n    } catch ({ message }) {\n      setError(message);\n      setLoading(null);\n    }\n  };\n\n  return (\n    <div className=\"signin\">\n      <div className=\"signin__nav\">\n        <Link className=\"link\" to=\"/register\">\n          Register\n          <div className=\"signin__arrow arrow\" />\n        </Link>\n      </div>\n\n      <Alert value={error} />\n      <Form onSubmit={handleSubmit}>\n        <Button disabled={loading} value=\"Sing in\" />\n      </Form>\n    </div>\n  );\n}\n\nSignin.propTypes = {\n  setCurrentUser: PropTypes.func,\n  setTasks: PropTypes.func,\n};\n\nexport default Signin;\n","export function startOfDay(date) {\n  date.setHours(0);\n  date.setMinutes(0);\n  date.setSeconds(0);\n  date.setMilliseconds(0);\n  return date;\n}\n\nexport function getNameDay(date) {\n  const days = ['Sun', 'Mon', 'Tue', 'Wen', 'Thu', 'Fri', 'Sat'];\n  return days[date.getDay()];\n}\n\nexport function getNameMonth(date) {\n  const months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n\n  return months[date.getMonth()];\n}\n\nexport function addZero(date) {\n  return date < 10 ? `0${date}` : date;\n}\n","import './CalendarCard.scss';\nimport PropTypes from 'prop-types';\nimport { getNameDay } from '../../shared/date/date';\n\nfunction CalendarCard({ date, onClick, checkPendingTasks, checkFulfilledTasks, createDayClass }) {\n  return (\n    <button type=\"button\" className=\"card btn\" onClick={() => onClick(date)}>\n      <div className={createDayClass(date)}>\n        <span className=\"card__text\">{getNameDay(date)}</span>\n        <span className=\"card__number\">{date.getDate()}</span>\n      </div>\n      <div className=\"card__board\">\n        {checkPendingTasks(date) ? <div className=\"card__pending\" /> : null}\n        {checkFulfilledTasks(date) ? <div className=\"card__fulfilled\" /> : null}\n      </div>\n    </button>\n  );\n}\n\nCalendarCard.propTypes = {\n  date: PropTypes.object,\n  onClick: PropTypes.func,\n  checkPendingTasks: PropTypes.func,\n  checkFulfilledTasks: PropTypes.func,\n  createDayClass: PropTypes.func,\n};\n\nexport default CalendarCard;\n","const INITIAL_SCALE = 0;\n\nconst enableScroll = (event, target) => {\n  const toLeft = event.deltaY < INITIAL_SCALE && target.scrollLeft > INITIAL_SCALE;\n  const hiddenWidth = target.scrollWidth - target.clientWidth;\n  const toRight = event.deltaY > INITIAL_SCALE && target.scrollLeft < hiddenWidth;\n\n  if (toLeft || toRight) {\n    event.preventDefault();\n    target.scrollLeft += event.deltaY;\n  }\n};\n\nexport default enableScroll;\n","const INCREMENT = 1;\n\nexport const createDates = (date) => {\n  const stopDay = date.getDate();\n  const result = [];\n  do {\n    result.push(new Date(date));\n    date.setDate(date.getDate() + INCREMENT);\n  } while (date.getDate() !== stopDay);\n\n  return result;\n};\n\nexport const addDates = (dates, setDates) => {\n  const target = document.querySelector('.calendar');\n  const maxScrollLeft = target.scrollWidth - target.clientWidth;\n  if (target.scrollLeft === maxScrollLeft) {\n    const lastDate = dates[dates.length - 1];\n    const lastDageCopy = new Date(lastDate);\n    lastDageCopy.setDate(lastDageCopy.getDate() + INCREMENT);\n    const newDates = createDates(lastDageCopy);\n    setDates([...dates, ...newDates]);\n  }\n};\n","import { useCallback, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './Calendar.scss';\nimport CalendarCard from '../CalendarCard/CalendarCard';\nimport { startOfDay } from '../../shared/date/date';\nimport enableScroll from './enableScroll';\nimport { addDates, createDates } from './endlessScrolling';\n\nfunction Calendar({ currentDate, setCurrentDate, tasks }) {\n  const initDate = startOfDay(new Date());\n  const [dates, setDates] = useState(createDates(initDate));\n\n  const handleClick = useCallback((date) => {\n    setCurrentDate(date);\n  }, []);\n\n  const checkFulfilledTasks = useCallback(\n    (date) => {\n      return tasks.some((item) => +item.date === +date && item.checked);\n    },\n    [tasks],\n  );\n\n  const checkPendingTasks = useCallback(\n    (date) => {\n      return tasks.some((item) => +item.date === +date && !item.checked);\n    },\n    [tasks],\n  );\n\n  const createDayClass = useCallback(\n    (date) => {\n      const toDay = startOfDay(new Date());\n      let dayClass = 'card__day';\n\n      if (+toDay === +date) {\n        dayClass += ' card__day_today';\n      }\n\n      if (+currentDate === +date) {\n        dayClass += ' card__day_current';\n      }\n      return dayClass;\n    },\n    [currentDate],\n  );\n\n  const cards = dates.map((item) => {\n    return (\n      <CalendarCard\n        key={item}\n        date={item}\n        currentDate={currentDate}\n        onClick={handleClick}\n        checkPendingTasks={checkPendingTasks}\n        checkFulfilledTasks={checkFulfilledTasks}\n        createDayClass={createDayClass}\n      />\n    );\n  });\n\n  const handleWheel = (event) => {\n    const target = document.querySelector('.calendar');\n    enableScroll(event, target);\n    addDates(dates, setDates);\n  };\n\n  useEffect(() => {\n    const target = document.querySelector('.calendar');\n    target.addEventListener('wheel', handleWheel);\n  });\n\n  return <ul className=\"calendar\">{cards}</ul>;\n}\n\nCalendar.propTypes = {\n  tasks: PropTypes.array,\n  currentDate: PropTypes.object,\n  setCurrentDate: PropTypes.func,\n};\n\nexport default Calendar;\n","import './Task.scss';\nimport PropTypes from 'prop-types';\n\nfunction Task({ task, onClick, onDoubleClick, onChange }) {\n  return (\n    <button\n      type=\"button\"\n      className=\"task\"\n      onClick={onClick}\n      onDoubleClick={() => onDoubleClick(task)}\n    >\n      <input\n        className=\"task__input\"\n        type=\"checkbox\"\n        checked={task.checked}\n        onChange={() => onChange(task)}\n      />\n      {task.title}\n    </button>\n  );\n}\n\nTask.propTypes = {\n  task: PropTypes.object,\n  setCurrentTask: PropTypes.func,\n  tasks: PropTypes.array,\n  setTasks: PropTypes.func,\n  currentUser: PropTypes.object,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onChange: PropTypes.func,\n};\n\nexport default Task;\n","import './TaskList.scss';\nimport PropTypes from 'prop-types';\nimport { useCallback, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Task from '../Task/Task';\nimport routeConstants from '../../shared/constants/routeConstants';\nimport { writeUserData } from '../../services/firebaseService';\n\nconst { TASK } = routeConstants;\n\nfunction TaskList({ setCurrentTask, currentDate, tasks, setTasks, currentUser }) {\n  const history = useHistory();\n  const taskList = [];\n  const timeoutId = useRef();\n  const delay = 200;\n\n  const handleClick = useCallback(() => {\n    timeoutId.current = setTimeout(() => {\n      // eslint-disable-next-line no-useless-return\n      return;\n    }, delay);\n  }, []);\n\n  const handleDoubleClick = useCallback(\n    (task) => {\n      const pulledTask = tasks.find((item) => item === task);\n      const newTasks = tasks.filter((item) => item !== task);\n\n      setCurrentTask(pulledTask);\n      setTasks(newTasks);\n      history.push(TASK);\n      clearTimeout(timeoutId.current);\n    },\n    [tasks],\n  );\n\n  const handleChange = useCallback(\n    async (task) => {\n      task.checked = !task.checked;\n      await setTasks([...tasks]);\n      writeUserData(currentUser, tasks);\n    },\n    [tasks, currentUser],\n  );\n\n  tasks.forEach((item, i) => {\n    if (+item.date === +currentDate) {\n      const task = (\n        <Task\n          key={i.toString()}\n          task={item}\n          currentUser={currentUser}\n          onClick={handleClick}\n          onDoubleClick={handleDoubleClick}\n          onChange={handleChange}\n        />\n      );\n      taskList.push(task);\n    }\n  });\n\n  return [\n    <div className=\"task-count\" key={22}>\n      {taskList.length} Tasks Today\n    </div>,\n    <ul className=\"task-list\" key={11}>\n      {taskList}\n    </ul>,\n  ];\n}\n\nTaskList.propTypes = {\n  setCurrentTask: PropTypes.func,\n  currentDate: PropTypes.object,\n  tasks: PropTypes.array,\n  setTasks: PropTypes.func,\n  currentUser: PropTypes.object,\n};\n\nexport default TaskList;\n","import { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { signout } from '../../services/firebaseService';\nimport Calendar from '../../components/Calendar/Calendar';\nimport Alert from '../../components/Alert/Alert';\nimport './Tasker.scss';\nimport TaskList from '../../components/TaskList/TaskList';\nimport routeConstants from '../../shared/constants/routeConstants';\n\nconst { SIGNIN, TASK } = routeConstants;\n\nfunction Tasker({\n  currentTask,\n  setCurrentTask,\n  currentDate,\n  setCurrentDate,\n  tasks,\n  setTasks,\n  currentUser,\n}) {\n  const [error, setError] = useState('');\n  const history = useHistory();\n\n  const handleSignout = async () => {\n    setError('');\n\n    try {\n      await signout();\n      history.push(SIGNIN);\n    } catch ({ message }) {\n      setError(message);\n    }\n  };\n\n  return (\n    <div className=\"tasker\">\n      <div className=\"header\">\n        Tasker\n        <button className=\"signout\" type=\"button\" onClick={handleSignout}>\n          Sign out\n        </button>\n      </div>\n      <Alert value={error} />\n      <Calendar currentDate={currentDate} setCurrentDate={setCurrentDate} tasks={tasks} />\n      <TaskList\n        currentTask={currentTask}\n        setCurrentTask={setCurrentTask}\n        currentDate={currentDate}\n        setCurrentDate={setCurrentDate}\n        tasks={tasks}\n        setTasks={setTasks}\n        currentUser={currentUser}\n      />\n      <Link className=\"tasker__link\" to={TASK}>\n        + Add a New Task\n      </Link>\n    </div>\n  );\n}\n\nTasker.propTypes = {\n  currentTask: PropTypes.object,\n  setCurrentTask: PropTypes.func,\n  currentDate: PropTypes.object,\n  setCurrentDate: PropTypes.func,\n  tasks: PropTypes.array,\n  setTasks: PropTypes.func,\n  currentUser: PropTypes.object,\n};\n\nexport default Tasker;\n","import './TaskEditor.scss';\nimport PropTypes from 'prop-types';\n\nfunction TaskEditor({ checked, title, onChange }) {\n  return (\n    <div className=\"task\">\n      <input\n        className=\"task__checkbox\"\n        type=\"checkbox\"\n        name=\"checkbox\"\n        checked={checked}\n        onChange={onChange}\n      />\n      <input className=\"task__text\" type=\"text\" value={title} name=\"title\" onChange={onChange} />\n    </div>\n  );\n}\n\nTaskEditor.propTypes = {\n  checked: PropTypes.bool,\n  title: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default TaskEditor;\n","export default __webpack_public_path__ + \"static/media/arrow.23e24faa.svg\";","import PropTypes from 'prop-types';\nimport './DatepickerHeader.scss';\nimport arrow from '../../img/arrow.svg';\nimport { getNameMonth } from '../../shared/date/date';\n\nfunction DatepickerHeader({ date, setDate }) {\n  const nextMonth = () => {\n    setDate(new Date(date.setMonth(date.getMonth() + 1)));\n  };\n\n  const previousMonth = () => {\n    setDate(new Date(date.setMonth(date.getMonth() - 1)));\n  };\n\n  return (\n    <div className=\"datepicker-header\">\n      <button type=\"button\" className=\"datepicker-header__btn btn\" onClick={previousMonth}>\n        <img className=\"datepicker-header__arrow_right\" src={arrow} alt=\"\" />\n      </button>\n      <div className=\"datepicker-header__date\">{`${getNameMonth(date)} ${date.getFullYear()}`}</div>\n      <button type=\"button\" className=\"datepicker-header__btn btn\" onClick={nextMonth}>\n        <img src={arrow} alt=\"\" />\n      </button>\n    </div>\n  );\n}\n\nDatepickerHeader.propTypes = {\n  date: PropTypes.object,\n  setDate: PropTypes.func,\n};\n\nexport default DatepickerHeader;\n","import './DatepickerTableButton.scss';\nimport PropTypes from 'prop-types';\nimport { startOfDay } from '../../shared/date/date';\n\nfunction DatepickerTableButton({ date, onClick, checkedDate }) {\n  const toDay = startOfDay(new Date());\n  let className = 'date-btn';\n\n  if (+date === +checkedDate) {\n    className += ' date-btn__checked';\n  } else if (+toDay === +date) {\n    className += ' date-btn__today';\n  }\n\n  return (\n    <button className={className} type=\"button\" onClick={() => onClick(date)}>\n      {date.getDate()}\n    </button>\n  );\n}\n\nDatepickerTableButton.propTypes = {\n  date: PropTypes.object,\n  onClick: PropTypes.func,\n  checkedDate: PropTypes.object,\n};\n\nexport default DatepickerTableButton;\n","import './DatepickerTable.scss';\nimport PropTypes from 'prop-types';\nimport { useCallback, useState } from 'react';\nimport DatepickerTableButton from '../DatepickerTableButton/DatepickerTableButton';\n\nconst WEEK_DAYS = 7;\nconst SUN = 0;\nconst SAT = 6;\nconst MONTH_FIRST_NUMBER = 1;\n\nfunction DatepickerTable({ date, onChange }) {\n  const calendarDate = new Date(date);\n  const [checkedDate, setCheckedDate] = useState(new Date(date));\n  const lastDate = new Date(calendarDate.getFullYear(), calendarDate.getMonth() + 1, 0).getDate();\n  const lastDay = new Date(calendarDate.getFullYear(), calendarDate.getMonth(), lastDate).getDay();\n  const firstDay = new Date(calendarDate.getFullYear(), calendarDate.getMonth(), 1).getDay();\n  const calendar = [];\n  let week = [];\n\n  const handleClick = useCallback((btnDate) => {\n    setCheckedDate(new Date(btnDate));\n    onChange({ target: { name: 'date', value: btnDate } });\n  }, []);\n\n  const generateNumber = () => {\n    return Math.random();\n  };\n\n  const fillStartMonthByEmpty = () => {\n    if (firstDay !== SUN) {\n      for (let i = 0; i < firstDay; i++) week.push(<td key={generateNumber()} />);\n    } else {\n      for (let i = 0; i < SUN; i++) week.push(<td key={generateNumber()} />);\n    }\n  };\n\n  const fillMonthByDate = () => {\n    for (let i = MONTH_FIRST_NUMBER; i <= lastDate; i++) {\n      const tmpDate = new Date(calendarDate.getFullYear(), calendarDate.getMonth(), i);\n\n      week.push(\n        <td key={generateNumber()}>\n          <DatepickerTableButton date={tmpDate} checkedDate={checkedDate} onClick={handleClick} />\n        </td>,\n      );\n\n      if (tmpDate.getDay() === SAT) {\n        calendar.push(<tr key={generateNumber()}>{week.slice()}</tr>);\n        week = [];\n      }\n    }\n  };\n\n  const fillEndMonthByEmpty = () => {\n    if (lastDay !== SUN) {\n      for (let i = lastDay; i < WEEK_DAYS; i++) week.push(<td key={generateNumber()} />);\n    }\n\n    calendar.push(<tr key={generateNumber()}>{week}</tr>);\n  };\n\n  fillStartMonthByEmpty();\n  fillMonthByDate();\n  fillEndMonthByEmpty();\n\n  return <tbody>{calendar}</tbody>;\n}\n\nDatepickerTable.propTypes = {\n  date: PropTypes.object,\n  onChange: PropTypes.func,\n};\n\nexport default DatepickerTable;\n","import './Datepicker.scss';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport DatepickerHeader from '../DatepickerHeader/DatepickerHeader';\nimport DatepickerTable from '../DatepickerTable/DatepickerTable';\n\nfunction Datepicker({ data, onChange }) {\n  const [date, setDate] = useState(new Date(data));\n\n  return (\n    <div className=\"datepicker\" id=\"datepicker\">\n      <DatepickerHeader date={date} setDate={setDate} />\n      <table>\n        <thead>\n          <tr>\n            <th>Sun</th>\n            <th>Mon</th>\n            <th>Tue</th>\n            <th>Wen</th>\n            <th>Thu</th>\n            <th>Fri</th>\n            <th>Sat</th>\n          </tr>\n        </thead>\n\n        <DatepickerTable date={date} onChange={onChange} />\n      </table>\n    </div>\n  );\n}\n\nDatepicker.propTypes = {\n  data: PropTypes.object,\n  onChange: PropTypes.func,\n};\n\nexport default Datepicker;\n","import './DateEditor.scss';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { addZero } from '../../shared/date/date';\nimport Datepicker from '../Datepicker/Datepicker';\n\nfunction DateEditor({ task: { date }, onChange }) {\n  const [datepickerDisplay, setDatepickerDisplay] = useState(false);\n  const dateInfoContent = `${addZero(date.getMonth() + 1)}/${addZero(\n    date.getDate(),\n  )}/${date.getFullYear()}`;\n\n  return (\n    <div>\n      <div className=\"date-control\">\n        <div className=\"date-control__info\" type=\"text\">\n          {dateInfoContent}\n        </div>\n        <input\n          type=\"button\"\n          value=\"date\"\n          onClick={() => {\n            setDatepickerDisplay(!datepickerDisplay);\n          }}\n        />\n      </div>\n      {datepickerDisplay ? <Datepicker name=\"date\" data={date} onChange={onChange} /> : null}\n    </div>\n  );\n}\n\nDateEditor.propTypes = {\n  task: PropTypes.object,\n  onChange: PropTypes.func,\n};\n\nexport default DateEditor;\n","import './Actions.scss';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport routeConstants from '../../shared/constants/routeConstants';\nimport { writeUserData } from '../../services/firebaseService';\n\nconst { TASKER } = routeConstants;\n\nfunction Actions({ currentTask, setCurrentTask, task, tasks, setTasks, currentUser }) {\n  const history = useHistory();\n  const btnName = currentTask ? 'Update' : 'Save';\n\n  const handleClick = async ({ target: { name } }) => {\n    if (name !== 'delete') {\n      await setTasks(() => [...tasks, { ...task }]);\n    }\n\n    writeUserData(currentUser, tasks);\n    setCurrentTask(null);\n    history.push(TASKER);\n  };\n\n  return (\n    <div className=\"actions\">\n      <button className=\"delete-btn btn\" type=\"button\" name=\"delete\" onClick={handleClick}>\n        Delete\n      </button>\n      <button className=\"save-btn btn\" type=\"button\" name={btnName} onClick={handleClick}>\n        {btnName}\n      </button>\n    </div>\n  );\n}\n\nActions.propTypes = {\n  currentTask: PropTypes.object,\n  setCurrentTask: PropTypes.func,\n  task: PropTypes.object,\n  tasks: PropTypes.array,\n  setTasks: PropTypes.func,\n  currentUser: PropTypes.object,\n};\n\nexport default Actions;\n","import { useHistory } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { writeUserData } from '../../services/firebaseService';\nimport './TaskPage.scss';\nimport EditTask from '../../components/TaskEditor/TaskEditor';\nimport DateEditor from '../../components/DateEditor/DateEditor';\nimport { startOfDay } from '../../shared/date/date';\nimport Actions from '../../components/Actions/Actions';\nimport routeConstants from '../../shared/constants/routeConstants';\n\nconst { TASKER } = routeConstants;\n\nfunction TaskPage({ currentTask, setCurrentTask, currentDate, tasks, setTasks, currentUser }) {\n  const initTask = {\n    checked: false,\n    title: 'Title',\n    description: 'description',\n    date: startOfDay(currentDate),\n  };\n\n  const [task, setTask] = useState(currentTask || initTask);\n  const history = useHistory();\n  const textContent = \"Today's Task\";\n\n  const handleChange = ({ target: { name, value, checked } }) => {\n    if (name === 'checkbox') {\n      setTask({ ...task, checked });\n    } else {\n      setTask({ ...task, [name]: value });\n    }\n  };\n\n  const handleBackBtn = async () => {\n    if (currentTask) {\n      await setTasks(() => [...tasks, { ...currentTask }]);\n      setCurrentTask(null);\n    }\n\n    history.push(TASKER);\n  };\n\n  useEffect(() => {\n    return () => writeUserData(currentUser, tasks);\n  }, [currentUser, tasks]);\n\n  return (\n    <div className=\"task-page\">\n      <div className=\"task-page__container\">\n        <div className=\"task-page__nav\">\n          <button type=\"button\" name=\"back\" className=\"task-page__back\" onClick={handleBackBtn}>\n            <div className=\"task-page__arrow arrow\" />\n            <div className=\"text_nowrap\">{textContent}</div>\n          </button>\n        </div>\n        <EditTask checked={task.checked} title={task.title} onChange={handleChange} />\n        <textarea\n          className=\"task-page__description\"\n          name=\"description\"\n          value={task.description}\n          onChange={handleChange}\n        />\n        <DateEditor task={task} onChange={handleChange} />\n      </div>\n      <Actions\n        currentTask={currentTask}\n        setCurrentTask={setCurrentTask}\n        task={task}\n        tasks={tasks}\n        setTasks={setTasks}\n        currentUser={currentUser}\n      />\n    </div>\n  );\n}\n\nTaskPage.propTypes = {\n  currentTask: PropTypes.object,\n  setCurrentTask: PropTypes.func,\n  currentDate: PropTypes.object,\n  tasks: PropTypes.array,\n  setTasks: PropTypes.func,\n  currentUser: PropTypes.object,\n};\n\nexport default TaskPage;\n","import './Loader.scss';\n\nfunction Loader() {\n  return <div className=\"loading\">loading...</div>;\n}\n\nexport default Loader;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Loader from '../Loader/Loader';\nimport { readUserData, unsubscribe } from '../../services/firebaseService';\n\nfunction LoadingRoute({ children, setTasks, setCurrentUser }) {\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    return unsubscribe((user) => {\n      setCurrentUser(user);\n      readUserData(user, setTasks);\n      setLoading(false);\n    });\n  }, []);\n\n  return loading ? <Loader /> : children;\n}\n\nLoadingRoute.propTypes = {\n  children: PropTypes.node.isRequired,\n  setTasks: PropTypes.func,\n  setCurrentUser: PropTypes.func,\n};\n\nexport default LoadingRoute;\n","import { useState } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.scss';\nimport PrivateRoute from './components/PrivateRouter/PrivateRouter';\nimport Register from './pages/Register/Register';\nimport Signin from './pages/Signin/Signin';\nimport Tasker from './pages/Tasker/Tasker';\nimport TaskPage from './pages/TaskPage/TaskPage';\nimport { startOfDay } from './shared/date/date';\nimport routerConstants from './shared/constants/routeConstants';\nimport LoadingRoute from './components/LoadingRoute/LoadingRoute';\n\nconst { SIGNIN, REGISTER, TASKER, TASK } = routerConstants;\n\nfunction App() {\n  const [currentTask, setCurrentTask] = useState();\n  const [currentDate, setCurrentDate] = useState(startOfDay(new Date()));\n  const [currentUser, setCurrentUser] = useState();\n  const [tasks, setTasks] = useState([]);\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"container\">\n        <Router basename={TASKER}>\n          <LoadingRoute setTasks={setTasks} setCurrentUser={setCurrentUser}>\n            <Switch>\n              <PrivateRoute\n                exact\n                path={TASKER}\n                component={Tasker}\n                currentTask={currentTask}\n                setCurrentTask={setCurrentTask}\n                currentDate={currentDate}\n                setCurrentDate={setCurrentDate}\n                currentUser={currentUser}\n                tasks={tasks}\n                setTasks={setTasks}\n              />\n              <PrivateRoute\n                path={TASK}\n                component={TaskPage}\n                currentTask={currentTask}\n                setCurrentTask={setCurrentTask}\n                currentDate={currentDate}\n                currentUser={currentUser}\n                setCurrentUser={setCurrentUser}\n                tasks={tasks}\n                setTasks={setTasks}\n              />\n              <Route path={SIGNIN} component={Signin} />\n              <Route path={REGISTER} component={Register} />\n            </Switch>\n          </LoadingRoute>\n        </Router>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}