{"version":3,"sources":["core/constants/routeConstants.js","core/components/Loader/Loader.js","firebase.js","core/constants/actionConstants.js","core/components/AppProvider/AppProvider.js","core/components/PrivateRoute/PrivateRoute.js","core/components/Button/Button.js","core/components/Form/Form.js","core/components/Alert/Alert.js","pages/Register/components/PasswordInput/PasswordInput.js","core/services/firebaseService.js","pages/Register/Register.js","pages/Signin/Signin.js","pages/Tasker/components/CalendarCard/CalendarCard.js","pages/Tasker/components/Calendar/useLazyLoading.js","pages/Tasker/components/Calendar/Calendar.js","pages/Tasker/components/Task/Task.js","pages/Tasker/components/TaskList/TaskList.js","pages/Tasker/Tasker.js","pages/TaskPage/components/TaskEditor/TaskEditor.js","assets/img/arrow.svg","pages/TaskPage/components/DatepickerHeader/DatepickerHeader.js","pages/TaskPage/components/DatepickerTableButton/DatepickerTableButton.js","pages/TaskPage/components/DatepickerTable/DatepickerTable.js","pages/TaskPage/components/Datepicker/Datepicker.js","pages/TaskPage/components/DateEditor/DateEditor.js","pages/TaskPage/components/Actions/Actions.js","pages/TaskPage/TaskPage.js","App.js","index.js"],"names":["Object","freeze","SIGNIN","REGISTER","TASKER","TASK","Loader","className","React","memo","app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","auth","SAVE","UPDATE","DELETE","actionConstants","AppContext","createContext","useApp","useContext","AppProvider","children","useState","loading","setLoading","currentTask","setCurrentTask","currentTaskId","setCurrentTaskId","startOfDay","Date","currentDate","setCurrentDate","currentUser","setCurrentUser","tasks","setTasks","action","setAction","scrollElemRef","useRef","useEffect","onAuthStateChanged","user","value","Provider","routeConstants","PrivateRoute","Component","component","render","to","Button","disabled","type","Form","onSubmit","email","password","setUser","handleChange","target","name","event","placeholder","onChange","required","Alert","PasswordInput","register","createUserWithEmailAndPassword","signin","signInWithEmailAndPassword","updateUserData","task","a","uid","ref","child","update","Register","error","setError","confirmPassword","setConfirmPassword","history","useHistory","handleSubmit","useCallback","preventDefault","push","message","Signin","CalendarCard","date","dayClass","useMemo","isToday","isEqual","createDayClass","isCompletedTask","values","some","item","checked","checkCompletedTasks","isPendingTask","checkPendingTasks","dateWord","format","dateNumber","getDate","onClick","useLazyLoading","onIntersection","delay","containerRef","func","ms","savedArgs","savedThis","isThrottled","wrapper","rest","this","apply","setTimeout","throttle","current","scrollLeft","clientWidth","scrollWidth","createDates","eachDayOfInterval","start","end","addMonths","Calendar","dates","setDates","appendItems","lastDate","length","addDays","onScroll","handleWheel","toLeft","deltaY","hiddenWidth","toRight","addEventListener","removeEventListener","cards","map","Task","taskId","timeoutId","onDoubleClick","clearTimeout","title","TaskList","taskList","entries","forEach","i","taskCompanent","toString","createTaskList","Tasker","handleSignout","signOut","Promise","resolve","on","snapshot","val","then","response","off","offUserDate","TaskEditor","setChecked","setTitle","DatepickerHeader","setDate","getTime","src","arrow","alt","DatepickerTableButton","checkedDate","createClassName","generateNumber","Math","random","DatepickerTable","setCheckedDate","handleClick","btnDate","calendar","calendarDate","startOfMonth","firstDay","getDay","weekCount","getWeeksInMonth","Array","fill","week","calendarI","_","weekI","isSunday","getMonth","generateCalendar","Datepicker","data","id","DateEditor","datepickerDisplay","setDatepickerDisplay","Actions","pushUserData","set","writeUserData","scrollIntoView","block","inline","TaskPage","description","setDescription","routerConstants","App","basename","exact","path","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.1cb10dad.chunk.js","sourcesContent":["export default Object.freeze({\n  SIGNIN: '/signin',\n  REGISTER: '/register',\n  TASKER: '/',\n  TASK: '/task',\n});\n","import React from 'react';\nimport './Loader.scss';\n\nfunction Loader() {\n  return <div className=\"loading\">loading...</div>;\n}\n\nexport default React.memo(Loader);\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nconst app = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n});\n\nexport const database = app.database();\nexport const auth = app.auth();\nexport default app;\n","export default Object.freeze({\n  SAVE: 'Save',\n  UPDATE: 'Update',\n  DELETE: 'Delete',\n});\n","import React, { useContext, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { startOfDay } from 'date-fns';\nimport Loader from '../Loader/Loader';\nimport { auth } from '../../../firebase';\nimport actionConstants from '../../constants/actionConstants';\n\nconst { SAVE } = actionConstants;\nconst AppContext = React.createContext();\n\nexport function useApp() {\n  return useContext(AppContext);\n}\n\nfunction AppProvider({ children }) {\n  const [loading, setLoading] = useState(true);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [currentTaskId, setCurrentTaskId] = useState();\n  const [currentDate, setCurrentDate] = useState(startOfDay(new Date()));\n  const [currentUser, setCurrentUser] = useState();\n  const [tasks, setTasks] = useState({});\n  const [action, setAction] = useState(SAVE);\n  const scrollElemRef = useRef(null);\n\n  useEffect(() => {\n    return auth.onAuthStateChanged((user) => {\n      if (user) {\n        setCurrentUser(user);\n      }\n      setLoading(false);\n    });\n  }, []);\n\n  const value = {\n    currentTask,\n    setCurrentTask,\n    currentTaskId,\n    setCurrentTaskId,\n    currentDate,\n    setCurrentDate,\n    currentUser,\n    setCurrentUser,\n    tasks,\n    setTasks,\n    action,\n    setAction,\n    scrollElemRef,\n  };\n\n  return <AppContext.Provider value={value}>{loading ? <Loader /> : children}</AppContext.Provider>;\n}\n\nAppProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default AppProvider;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\nimport routeConstants from '../../constants/routeConstants';\nimport { useApp } from '../AppProvider/AppProvider';\n\nconst { SIGNIN } = routeConstants;\n\nfunction PrivateRoute({ component: Component }) {\n  const { currentUser } = useApp();\n\n  return <Route render={() => (currentUser ? <Component /> : <Redirect to={SIGNIN} />)} />;\n}\n\nPrivateRoute.propTypes = {\n  component: PropTypes.func,\n};\n\nexport default React.memo(PrivateRoute);\n","import './Button.scss';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nfunction Button({ value, disabled }) {\n  return <input className=\"button\" type=\"submit\" value={value} disabled={disabled} />;\n}\n\nButton.propTypes = {\n  value: PropTypes.string,\n  disabled: PropTypes.bool,\n};\n\nexport default React.memo(Button);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './Form.scss';\n\nfunction Form({ children, onSubmit }) {\n  const [user, setUser] = useState({\n    email: '',\n    password: '',\n  });\n\n  const handleChange = ({ target: { name, value } }) => {\n    setUser({ ...user, ...{ [name]: value } });\n  };\n\n  return (\n    <form className=\"form\" onSubmit={(event) => onSubmit(user, event)}>\n      <input\n        className=\"form__email\"\n        type=\"email\"\n        name=\"email\"\n        value={user.email}\n        placeholder=\"Email\"\n        onChange={handleChange}\n        required\n      />\n      <input\n        className=\"form__password\"\n        type=\"password\"\n        name=\"password\"\n        value={user.password}\n        placeholder=\"Password\"\n        onChange={handleChange}\n        required\n      />\n      {children}\n    </form>\n  );\n}\n\nForm.propTypes = {\n  children: PropTypes.node.isRequired || PropTypes.array,\n  onSubmit: PropTypes.func,\n};\n\nexport default React.memo(Form);\n","import './Alert.scss';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nfunction Alert({ value }) {\n  if (value) {\n    return <div className=\"alert\">{value}</div>;\n  }\n\n  return null;\n}\n\nAlert.propTypes = {\n  value: PropTypes.string,\n};\n\nexport default React.memo(Alert);\n","import './PasswordInput.scss';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nfunction PasswordInput({ value, placeholder, onChange }) {\n  return (\n    <input\n      className=\"password-input\"\n      type=\"password\"\n      value={value}\n      onChange={onChange}\n      placeholder={placeholder}\n    />\n  );\n}\n\nPasswordInput.propTypes = {\n  value: PropTypes.string,\n  placeholder: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default React.memo(PasswordInput);\n","import { auth, database } from '../../firebase';\n\nexport function register(email, password) {\n  return auth.createUserWithEmailAndPassword(email, password);\n}\n\nexport function signin(email, password) {\n  return auth.signInWithEmailAndPassword(email, password);\n}\n\nexport function signout() {\n  return auth.signOut();\n}\n\nexport function writeUserData({ uid }, tasks) {\n  database.ref(`users/${uid}`).set({ tasks });\n}\n\nexport function pushUserData({ uid }, task) {\n  database.ref(`users/${uid}`).child('tasks').push(task);\n}\n\nexport async function updateUserData({ uid }, task) {\n  database.ref(`users/${uid}`).child('tasks').update(task);\n}\n\nexport function onUserData(user) {\n  return new Promise((resolve) => {\n    database\n      .ref(`users/${user.uid}`)\n      .child('tasks')\n      .on('value', async (snapshot) => {\n        resolve(snapshot.val() || {});\n      });\n  });\n}\n\nexport function offUserDate({ uid }) {\n  database.ref(`users/${uid}`).off('value');\n}\n","import { Link, useHistory } from 'react-router-dom';\nimport React, { useCallback, useState } from 'react';\nimport Button from '../../core/components/Button/Button';\nimport Form from '../../core/components/Form/Form';\nimport './Register.scss';\nimport Alert from '../../core/components/Alert/Alert';\nimport PasswordInput from './components/PasswordInput/PasswordInput';\nimport { register } from '../../core/services/firebaseService';\nimport routeConstants from '../../core/constants/routeConstants';\n\nconst { TASKER, SIGNIN } = routeConstants;\n\nfunction Register() {\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const history = useHistory();\n\n  const handleSubmit = useCallback(\n    async ({ email, password }, event) => {\n      event.preventDefault();\n      if (password !== confirmPassword) {\n        setError('Passwords do not match');\n        return;\n      }\n\n      try {\n        setError('');\n        setLoading(true);\n        await register(email, password);\n        history.push(TASKER);\n      } catch ({ message }) {\n        setError(message);\n        setLoading(false);\n      }\n    },\n    [confirmPassword, history],\n  );\n\n  const handleChange = useCallback(({ target: { value } }) => setConfirmPassword(value), []);\n\n  return (\n    <div className=\"register\">\n      <div className=\"register__nav\">\n        <Link className=\"link\" to={SIGNIN}>\n          <div className=\"register__arrow arrow\" />\n          Sign in\n        </Link>\n      </div>\n      <Alert value={error} />\n      <Form onSubmit={handleSubmit}>\n        <PasswordInput\n          value={confirmPassword}\n          onChange={handleChange}\n          placeholder=\"Confirm password\"\n        />\n        <Button disabled={loading} value=\"Register\" />\n      </Form>\n    </div>\n  );\n}\n\nexport default Register;\n","import { Link, useHistory } from 'react-router-dom';\nimport React, { useCallback, useState } from 'react';\nimport 'firebase/auth';\nimport Form from '../../core/components/Form/Form';\nimport Alert from '../../core/components/Alert/Alert';\nimport './Signin.scss';\nimport Button from '../../core/components/Button/Button';\nimport { signin } from '../../core/services/firebaseService';\nimport routeConstants from '../../core/constants/routeConstants';\n\nconst { TASKER } = routeConstants;\n\nfunction Signin() {\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  const handleSubmit = useCallback(\n    async ({ email, password }, event) => {\n      event.preventDefault();\n\n      try {\n        setError('');\n        setLoading(true);\n        await signin(email, password);\n        history.push(TASKER);\n      } catch ({ message }) {\n        setError(message);\n        setLoading(null);\n      }\n    },\n    [history],\n  );\n\n  return (\n    <div className=\"signin\">\n      <div className=\"signin__nav\">\n        <Link className=\"link\" to=\"/register\">\n          Register\n          <div className=\"signin__arrow arrow\" />\n        </Link>\n      </div>\n\n      <Alert value={error} />\n      <Form onSubmit={handleSubmit}>\n        <Button disabled={loading} value=\"Sing in\" />\n      </Form>\n    </div>\n  );\n}\n\nexport default Signin;\n","import './CalendarCard.scss';\nimport PropTypes from 'prop-types';\nimport { format, getDate } from 'date-fns';\nimport isEqual from 'date-fns/isEqual';\nimport React, { useMemo } from 'react';\nimport isToday from 'date-fns/isToday';\nimport { useApp } from '../../../../core/components/AppProvider/AppProvider';\n\nconst checkCompletedTasks = (tasks, date) => {\n  return Object.values(tasks).some((item) => isEqual(item.date, date) && item.checked);\n};\n\nconst checkPendingTasks = (tasks, date) => {\n  return Object.values(tasks).some((item) => isEqual(item.date, date) && !item.checked);\n};\n\nconst createDayClass = (date, currentDate) => {\n  let dayClass = 'card__day';\n\n  if (isToday(date)) {\n    dayClass += ' card__day_today';\n  }\n\n  if (isEqual(currentDate, date)) {\n    dayClass += ' card__day_current';\n  }\n  return dayClass;\n};\n\nconst CalendarCard = ({ date }) => {\n  const { tasks, currentDate, setCurrentDate, scrollElemRef } = useApp();\n\n  const dayClass = useMemo(() => createDayClass(date, currentDate), [date, currentDate]);\n  const isCompletedTask = useMemo(() => checkCompletedTasks(tasks, date), [tasks, date]);\n  const isPendingTask = useMemo(() => checkPendingTasks(tasks, date), [tasks, date]);\n  const dateWord = useMemo(() => format(date, 'eee'), [date]);\n  const dateNumber = useMemo(() => getDate(date), [date]);\n\n  const handleClick = () => setCurrentDate(date);\n\n  return (\n    <button\n      className=\"card btn\"\n      ref={isEqual(currentDate, date) ? scrollElemRef : null}\n      type=\"button\"\n      onClick={handleClick}\n    >\n      <div className={dayClass}>\n        <span className=\"card__text\">{dateWord}</span>\n        <span className=\"card__number\">{dateNumber}</span>\n      </div>\n      <div className=\"card__board\">\n        {isPendingTask ? <div className=\"card__pending\" /> : null}\n        {isCompletedTask ? <div className=\"card__fulfilled\" /> : null}\n      </div>\n    </button>\n  );\n};\n\nCalendarCard.propTypes = {\n  date: PropTypes.object,\n};\n\nexport default React.memo(CalendarCard);\n","import { useRef, useCallback } from 'react';\n\nconst TIMEOUT_DELAY = 1000;\n\nfunction throttle(func, ms) {\n  let isThrottled = false;\n  let savedArgs;\n  let savedThis;\n\n  function wrapper(...rest) {\n    if (isThrottled) {\n      savedArgs = rest;\n      savedThis = this;\n      return;\n    }\n\n    func.apply(this, rest);\n\n    isThrottled = true;\n\n    setTimeout(() => {\n      isThrottled = false;\n      if (savedArgs) {\n        wrapper.apply(savedThis, savedArgs);\n        savedArgs = null;\n        savedThis = null;\n      }\n    }, ms);\n  }\n\n  return wrapper;\n}\n\nconst useLazyLoading = ({ onIntersection, delay = TIMEOUT_DELAY }) => {\n  const containerRef = useRef(null);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const onScroll = useCallback(\n    throttle(() => {\n      const { scrollLeft, clientWidth, scrollWidth } = containerRef.current;\n      const maxScrollLeft = scrollWidth - clientWidth;\n\n      if (scrollLeft === maxScrollLeft) {\n        onIntersection();\n      }\n    }, delay),\n    [onIntersection, containerRef, delay],\n  );\n\n  return [onScroll, containerRef];\n};\n\nexport default useLazyLoading;\n","/* eslint-disable react-hooks/rules-of-hooks */\n/* eslint-disable prettier/prettier */\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport './Calendar.scss';\nimport { startOfDay, addMonths, eachDayOfInterval, addDays } from 'date-fns';\nimport CalendarCard from '../CalendarCard/CalendarCard';\nimport useLazyLoading from './useLazyLoading';\n\nconst INITIAL_SCALE = 0;\nconst INCREMENT = 1;\nconst TIMEOUT_DELAY = 1200;\n\nconst createDates = (date) => {\n  return eachDayOfInterval({\n    start: date,\n    end: addMonths(date, INCREMENT),\n  });\n};\n\nfunction Calendar() {\n  const [dates, setDates] = useState(() => createDates(startOfDay(new Date())));\n\n  const appendItems = useCallback(() => {\n    const lastDate = dates[dates.length - 1];\n    setDates([...dates, ...createDates(addDays(lastDate, INCREMENT))]);\n  }, [dates, setDates]);\n\n  const [onScroll, containerRef] = useLazyLoading({\n    onIntersection: appendItems,\n    delay: TIMEOUT_DELAY,\n  });\n\n  const handleWheel = useCallback((event) => {\n    const { current } = containerRef;\n    const toLeft = event.deltaY < INITIAL_SCALE && current.scrollLeft > INITIAL_SCALE;\n    const hiddenWidth = current.scrollWidth - current.clientWidth;\n    const toRight = event.deltaY > INITIAL_SCALE && current.scrollLeft < hiddenWidth;\n\n    if (toLeft || toRight) {\n      event.preventDefault();\n      current.scrollLeft += event.deltaY;\n    }\n  }, [containerRef]);\n\n  useEffect(() => {\n    const { current } = containerRef;\n    current.addEventListener('wheel', handleWheel);\n\n    return () => current.removeEventListener('wheel', handleWheel);\n  }, [containerRef, handleWheel]);\n\n  const cards = useMemo(\n    () => dates.map((item) => {\n      return (\n        <li key={item}>\n          <CalendarCard date={item} />\n        </li>\n      );\n    }), [dates]);\n\n  return (\n    <ul className=\"calendar\" ref={containerRef} onScroll={onScroll}>\n      {cards}\n    </ul>\n  );\n}\n\nexport default React.memo(Calendar);\n","import './Task.scss';\nimport PropTypes from 'prop-types';\nimport React, { useRef } from 'react';\nimport { useHistory } from 'react-router';\nimport { useApp } from '../../../../core/components/AppProvider/AppProvider';\nimport { updateUserData } from '../../../../core/services/firebaseService';\nimport routeConstants from '../../../../core/constants/routeConstants';\nimport actionConstants from '../../../../core/constants/actionConstants';\n\nconst { TASK } = routeConstants;\nconst { UPDATE } = actionConstants;\nconst DELAY = 200;\n\nfunction Task({ task, taskId }) {\n  const { setTasks, currentUser, tasks, setCurrentTask, setCurrentTaskId, setAction } = useApp();\n  const history = useHistory();\n  const timeoutId = useRef();\n\n  const handleChange = async () => {\n    task.checked = !task.checked;\n    await updateUserData(currentUser, { [taskId]: { ...task } });\n    setTasks({ ...tasks });\n  };\n\n  const handleClick = () => {\n    timeoutId.current = setTimeout(() => {\n      // eslint-disable-next-line no-useless-return\n      return;\n    }, DELAY);\n  };\n\n  const handleDoubleClick = () => {\n    setCurrentTask(task);\n    setCurrentTaskId(taskId);\n    setAction(UPDATE);\n    history.push(TASK);\n    clearTimeout(timeoutId.current);\n  };\n\n  return (\n    <li>\n      <button\n        type=\"button\"\n        className=\"task\"\n        onClick={handleClick}\n        onDoubleClick={handleDoubleClick}\n      >\n        <input\n          className=\"task__input\"\n          type=\"checkbox\"\n          checked={task.checked}\n          onChange={handleChange}\n        />\n        {task.title}\n      </button>\n    </li>\n  );\n}\n\nTask.propTypes = {\n  task: PropTypes.object,\n  taskId: PropTypes.string,\n};\n\nexport default React.memo(Task);\n","import './TaskList.scss';\nimport React, { useMemo } from 'react';\nimport { isEqual } from 'date-fns';\nimport Task from '../Task/Task';\nimport { useApp } from '../../../../core/components/AppProvider/AppProvider';\n\nconst createTaskList = (tasks, currentDate) => {\n  const taskList = [];\n  Object.entries(tasks).forEach(([taskId, task], i) => {\n    if (isEqual(task.date, currentDate)) {\n      const taskCompanent = <Task key={i.toString()} task={task} taskId={taskId} />;\n      taskList.push(taskCompanent);\n    }\n  });\n\n  return taskList;\n};\n\nfunction TaskList() {\n  const { tasks, currentDate } = useApp();\n  const taskList = useMemo(() => createTaskList(tasks, currentDate), [currentDate, tasks]);\n\n  return [\n    <div className=\"task-count\" key={22}>\n      {taskList.length} Tasks Today\n    </div>,\n    <ul className=\"task-list\" key={11}>\n      {taskList}\n    </ul>,\n  ];\n}\n\nexport default React.memo(TaskList);\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { offUserDate, onUserData, signout } from '../../core/services/firebaseService';\nimport Calendar from './components/Calendar/Calendar';\nimport Alert from '../../core/components/Alert/Alert';\nimport './Tasker.scss';\nimport TaskList from './components/TaskList/TaskList';\nimport routeConstants from '../../core/constants/routeConstants';\nimport { useApp } from '../../core/components/AppProvider/AppProvider';\nimport Loader from '../../core/components/Loader/Loader';\nimport actionConstants from '../../core/constants/actionConstants';\n\nconst { SIGNIN, TASK } = routeConstants;\nconst { SAVE } = actionConstants;\n\nfunction Tasker() {\n  const { setAction, currentUser, setTasks } = useApp();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const history = useHistory();\n\n  const handleSignout = async () => {\n    setError('');\n\n    try {\n      await signout();\n      history.push(SIGNIN);\n    } catch ({ message }) {\n      setError(message);\n    }\n  };\n\n  const handleClick = () => {\n    setAction(SAVE);\n    history.push(TASK);\n  };\n\n  useEffect(() => {\n    onUserData(currentUser).then((response) => {\n      setTasks(response);\n      setLoading(false);\n    });\n\n    return () => offUserDate(currentUser);\n  }, [currentUser, setTasks]);\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  return (\n    <div className=\"tasker\">\n      <div className=\"header\">\n        Tasker\n        <button className=\"signout\" type=\"button\" onClick={handleSignout}>\n          Sign out\n        </button>\n      </div>\n      <Alert value={error} />\n      <Calendar />\n      <TaskList />\n      <button type=\"button\" className=\"tasker__btn btn\" onClick={handleClick}>\n        + Add a New Task\n      </button>\n    </div>\n  );\n}\n\nexport default Tasker;\n","import './TaskEditor.scss';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nfunction TaskEditor({ checked, title, setChecked, setTitle }) {\n  return (\n    <div className=\"task\">\n      <input\n        className=\"task__checkbox\"\n        type=\"checkbox\"\n        name=\"checkbox\"\n        checked={checked}\n        // eslint-disable-next-line no-shadow\n        onChange={({ target: { checked } }) => setChecked(checked)}\n      />\n      <input\n        className=\"task__text\"\n        type=\"text\"\n        value={title}\n        name=\"title\"\n        onChange={({ target: { value } }) => setTitle(value)}\n      />\n    </div>\n  );\n}\n\nTaskEditor.propTypes = {\n  checked: PropTypes.bool,\n  title: PropTypes.string,\n  setChecked: PropTypes.func,\n  setTitle: PropTypes.func,\n};\n\nexport default React.memo(TaskEditor);\n","export default __webpack_public_path__ + \"static/media/arrow.23e24faa.svg\";","import PropTypes from 'prop-types';\nimport './DatepickerHeader.scss';\nimport { format, addMonths, getTime } from 'date-fns';\nimport React from 'react';\nimport arrow from '../../../../assets/img/arrow.svg';\n\nfunction DatepickerHeader({ date, setDate }) {\n  const nextMonth = () => {\n    setDate(getTime(addMonths(date, 1)));\n  };\n\n  const previousMonth = () => {\n    setDate(getTime(addMonths(date, -1)));\n  };\n\n  return (\n    <div className=\"datepicker-header\">\n      <button type=\"button\" className=\"datepicker-header__btn btn\" onClick={previousMonth}>\n        <img className=\"datepicker-header__arrow_right\" src={arrow} alt=\"\" />\n      </button>\n      <div className=\"datepicker-header__date\">{format(date, 'MMMM yyyy')}</div>\n      <button type=\"button\" className=\"datepicker-header__btn btn\" onClick={nextMonth}>\n        <img src={arrow} alt=\"\" />\n      </button>\n    </div>\n  );\n}\n\nDatepickerHeader.propTypes = {\n  date: PropTypes.number,\n  setDate: PropTypes.func,\n};\n\nexport default React.memo(DatepickerHeader);\n","import './DatepickerTableButton.scss';\nimport PropTypes from 'prop-types';\nimport { isToday, isEqual, getDate } from 'date-fns';\nimport React from 'react';\n\nfunction DatepickerTableButton({ date, onClick, checkedDate }) {\n  const createClassName = () => {\n    let className = 'date-btn';\n\n    if (isEqual(date, checkedDate)) {\n      className += ' date-btn__checked';\n    } else if (isToday(date)) {\n      className += ' date-btn__today';\n    }\n\n    return className;\n  };\n\n  return (\n    <button className={createClassName()} type=\"button\" onClick={() => onClick(date)}>\n      {getDate(date)}\n    </button>\n  );\n}\n\nDatepickerTableButton.propTypes = {\n  date: PropTypes.number,\n  onClick: PropTypes.func,\n  checkedDate: PropTypes.number,\n};\n\nexport default React.memo(DatepickerTableButton);\n","import './DatepickerTable.scss';\nimport PropTypes from 'prop-types';\nimport { startOfMonth, isSunday, getWeeksInMonth, addDays, getMonth, getTime } from 'date-fns';\nimport React, { useCallback, useMemo, useState } from 'react';\nimport DatepickerTableButton from '../DatepickerTableButton/DatepickerTableButton';\n\nconst WEEK_DAYS = 7;\nconst INCREMENT = 1;\n\nconst generateNumber = () => {\n  return Math.random();\n};\n\nconst generateCalendar = (date, checkedDate, handleClick) => {\n  let calendarDate = startOfMonth(date);\n  const firstDay = startOfMonth(calendarDate).getDay();\n  const weekCount = getWeeksInMonth(date);\n  const calendar = new Array(weekCount).fill(null);\n\n  return calendar.map((week, calendarI) => {\n    week = new Array(WEEK_DAYS).fill(null);\n    week.forEach((_, weekI) => {\n      if (\n        // eslint-disable-next-line operator-linebreak\n        (!calendarI && !isSunday(firstDay) && weekI >= firstDay) ||\n        (calendarI && getMonth(calendarDate) === getMonth(date))\n      ) {\n        week[weekI] = (\n          <td key={generateNumber()}>\n            <DatepickerTableButton\n              date={getTime(calendarDate)}\n              checkedDate={checkedDate}\n              onClick={handleClick}\n            />\n          </td>\n        );\n        calendarDate = addDays(calendarDate, INCREMENT);\n      } else {\n        week[weekI] = <td key={generateNumber()} />;\n      }\n    });\n    return <tr key={generateNumber()}>{week}</tr>;\n  });\n};\n\nfunction DatepickerTable({ date, onChange }) {\n  const [checkedDate, setCheckedDate] = useState(getTime(date));\n\n  const handleClick = useCallback(\n    (btnDate) => {\n      setCheckedDate(getTime(btnDate));\n      onChange(getTime(btnDate));\n    },\n    [setCheckedDate, onChange],\n  );\n\n  const calendar = useMemo(() => generateCalendar(date, checkedDate, handleClick), [\n    date,\n    checkedDate,\n    handleClick,\n  ]);\n\n  return <tbody>{calendar}</tbody>;\n}\n\nDatepickerTable.propTypes = {\n  date: PropTypes.number,\n  onChange: PropTypes.func,\n};\n\nexport default React.memo(DatepickerTable);\n","import './Datepicker.scss';\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useState } from 'react';\nimport getTime from 'date-fns/getTime';\nimport DatepickerHeader from '../DatepickerHeader/DatepickerHeader';\nimport DatepickerTable from '../DatepickerTable/DatepickerTable';\n\nfunction Datepicker({ data, onChange }) {\n  const [date, setDate] = useState(getTime(data));\n\n  return (\n    <div className=\"datepicker\" id=\"datepicker\">\n      <DatepickerHeader date={date} setDate={useCallback(setDate, [setDate])} />\n      <table>\n        <thead>\n          <tr>\n            <th>Sun</th>\n            <th>Mon</th>\n            <th>Tue</th>\n            <th>Wen</th>\n            <th>Thu</th>\n            <th>Fri</th>\n            <th>Sat</th>\n          </tr>\n        </thead>\n\n        <DatepickerTable date={date} onChange={useCallback(onChange, [onChange])} />\n      </table>\n    </div>\n  );\n}\n\nDatepicker.propTypes = {\n  data: PropTypes.number,\n  onChange: PropTypes.func,\n};\n\nexport default Datepicker;\n","import './DateEditor.scss';\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { format } from 'date-fns';\nimport Datepicker from '../Datepicker/Datepicker';\n\nfunction DateEditor({ date, setDate }) {\n  const [datepickerDisplay, setDatepickerDisplay] = useState(false);\n\n  return (\n    <div>\n      <div className=\"date-control\">\n        <div className=\"date-control__info\" type=\"text\">\n          {format(date, 'P')}\n        </div>\n        <input\n          type=\"button\"\n          value=\"date\"\n          onClick={() => {\n            setDatepickerDisplay(!datepickerDisplay);\n          }}\n        />\n      </div>\n      {datepickerDisplay ? <Datepicker name=\"date\" data={date} onChange={setDate} /> : null}\n    </div>\n  );\n}\n\nDateEditor.propTypes = {\n  date: PropTypes.number,\n  setDate: PropTypes.func,\n};\n\nexport default React.memo(DateEditor);\n","import './Actions.scss';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { useHistory } from 'react-router';\nimport scrollIntoView from 'scroll-into-view-if-needed';\nimport { useApp } from '../../../../core/components/AppProvider/AppProvider';\nimport routeConstants from '../../../../core/constants/routeConstants';\nimport actionConstants from '../../../../core/constants/actionConstants';\nimport {\n  pushUserData,\n  updateUserData,\n  writeUserData,\n} from '../../../../core/services/firebaseService';\n\nconst { TASKER } = routeConstants;\nconst { SAVE, UPDATE, DELETE } = actionConstants;\nconst DELAY = 500;\n\nfunction Actions({ task }) {\n  const history = useHistory();\n  const {\n    scrollElemRef,\n    action,\n    tasks,\n    currentUser,\n    currentTaskId,\n    setCurrentTaskId,\n    setCurrentTask,\n  } = useApp();\n\n  const handleClick = ({ target: { name } }) => {\n    if (name === SAVE) {\n      pushUserData(currentUser, { ...task });\n    } else if (name === UPDATE) {\n      updateUserData(currentUser, { [currentTaskId]: { ...task } });\n    } else if (name === DELETE) {\n      delete tasks[currentTaskId];\n      writeUserData(currentUser, tasks);\n    }\n\n    setCurrentTask(null);\n    setCurrentTaskId(null);\n    history.push(TASKER);\n    setTimeout(() => {\n      const { current } = scrollElemRef;\n      if (current) {\n        scrollIntoView(current, { block: 'center', inline: 'center' });\n      }\n    }, DELAY);\n  };\n\n  return (\n    <div className=\"actions\">\n      <button className=\"delete-btn btn\" type=\"button\" name={DELETE} onClick={handleClick}>\n        {DELETE}\n      </button>\n      <button className=\"save-btn btn\" type=\"button\" name={action} onClick={handleClick}>\n        {action}\n      </button>\n    </div>\n  );\n}\n\nActions.propTypes = {\n  task: PropTypes.object,\n};\n\nexport default React.memo(Actions);\n","import { useHistory } from 'react-router-dom';\nimport './TaskPage.scss';\nimport React, { useCallback, useState } from 'react';\nimport { getTime } from 'date-fns';\nimport scrollIntoView from 'scroll-into-view-if-needed';\nimport EditTask from './components/TaskEditor/TaskEditor';\nimport DateEditor from './components/DateEditor/DateEditor';\nimport Actions from './components/Actions/Actions';\nimport routeConstants from '../../core/constants/routeConstants';\nimport { useApp } from '../../core/components/AppProvider/AppProvider';\n\nconst { TASKER } = routeConstants;\nconst DELAY = 500;\n\nfunction TaskPage() {\n  const { currentTask, setCurrentTask, setCurrentTaskId, currentDate, scrollElemRef } = useApp();\n  const [checked, setChecked] = useState(currentTask ? currentTask.checked : false);\n  const [title, setTitle] = useState(currentTask ? currentTask.title : '');\n  const [description, setDescription] = useState(currentTask ? currentTask.description : '');\n  const [date, setDate] = useState(currentTask ? currentTask.date : getTime(currentDate));\n  const history = useHistory();\n  const textContent = \"Today's Task\";\n  const task = { checked, title, description, date };\n\n  const handleClick = () => {\n    setCurrentTask(null);\n    setCurrentTaskId(null);\n    history.push(TASKER);\n    setTimeout(() => {\n      const { current } = scrollElemRef;\n      if (current) {\n        scrollIntoView(current, { block: 'center', inline: 'center' });\n      }\n    }, DELAY);\n  };\n\n  return (\n    <div className=\"task-page\">\n      <div className=\"task-page__container\">\n        <div className=\"task-page__nav\">\n          <button type=\"button\" name=\"back\" className=\"task-page__back\" onClick={handleClick}>\n            <div className=\"task-page__arrow arrow\" />\n            <div className=\"text_nowrap\">{textContent}</div>\n          </button>\n        </div>\n        <EditTask\n          checked={checked}\n          title={title}\n          setChecked={useCallback(setChecked, [setChecked])}\n          setTitle={useCallback(setTitle, [setTitle])}\n        />\n        <textarea\n          className=\"task-page__description\"\n          name=\"description\"\n          value={description}\n          onChange={({ target: { value } }) => setDescription(value)}\n        />\n        <DateEditor date={date} setDate={useCallback(setDate, [setDate])} />\n      </div>\n      <Actions task={task} />\n    </div>\n  );\n}\n\nexport default TaskPage;\n","import { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.scss';\nimport PrivateRoute from './core/components/PrivateRoute/PrivateRoute';\nimport Register from './pages/Register/Register';\nimport Signin from './pages/Signin/Signin';\nimport Tasker from './pages/Tasker/Tasker';\nimport TaskPage from './pages/TaskPage/TaskPage';\nimport routerConstants from './core/constants/routeConstants';\nimport AppProvider from './core/components/AppProvider/AppProvider';\n\nconst { SIGNIN, REGISTER, TASKER, TASK } = routerConstants;\n\nfunction App() {\n  return (\n    <div className=\"wrapper\">\n      <div className=\"container\">\n        <Router basename={TASKER}>\n          <AppProvider>\n            <Switch>\n              <PrivateRoute exact path={TASKER} component={Tasker} />\n              <PrivateRoute path={TASK} component={TaskPage} />\n              <Route path={SIGNIN} component={Signin} />\n              <Route path={REGISTER} component={Register} />\n            </Switch>\n          </AppProvider>\n        </Router>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}