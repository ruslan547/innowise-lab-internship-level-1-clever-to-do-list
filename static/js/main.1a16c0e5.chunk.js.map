{"version":3,"sources":["firebase.js","components/UI/Loader/Loader.js","contexts/AuthContext.js","components/PrivateRouter.js","components/UI/Button/Button.js","components/UI/Form/Form.js","components/UI/Alert/Alert.js","components/UI/PasswordInput/PasswordInput.js","components/Register/Register.js","components/Signin/Signin.js","date/date.js","components/Tasker/Calendar/Card/Card.js","components/Tasker/Calendar/Calendar.js","components/Tasker/TaskList/Task/Task.js","components/Tasker/TaskList/TaskList.js","components/Tasker/Tasker.js","components/TaskPage/TaskEditor/TaskEditor.js","img/arrow.svg","components/UI/Datepicker/Header/Header.js","components/UI/Datepicker/Table/DateButton/DateButton.js","components/UI/Datepicker/Table/Table.js","components/UI/Datepicker/Datepicker.js","components/TaskPage/DateEditor/DateEditor.js","components/TaskPage/Actions/Actions.js","components/TaskPage/TaskPage.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","auth","Loader","className","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","tasks","setTasks","loading","setLoading","readUserData","user","ref","concat","uid","once","snapshot","response","val","Object","parsedData","JSON","parse","key","value","Date","useEffect","onAuthStateChanged","signin","email","password","signInWithEmailAndPassword","register","createUserWithEmailAndPassword","signout","signOut","writeUserData","jsonStr","stringify","set","Provider","PrivateRoute","Component","component","currentTask","setCurrentTask","currentDate","setCurrentDate","toDay","render","to","Button","params","disabled","type","Form","onSubmit","setUser","handleChange","event","target","name","placeholder","onChange","required","Alert","PasswordInput","Register","error","setError","confirmPassword","setConfirmPassword","history","useHistory","handleSubmit","a","preventDefault","push","message","Signin","startOfDay","date","setHours","setMinutes","setSeconds","setMilliseconds","getNameDay","getDay","getNameMonth","getMonth","addZero","Card","onClick","dayClass","createDayClass","getDate","some","item","getTime","checked","createDates","stopDay","result","setDate","Calendar","initDate","dates","setDates","cards","map","handleWheel","document","querySelector","toLeft","deltaY","scrollLeft","hiddenWidth","scrollWidth","clientWidth","toRight","enableScroll","maxScrollLeft","lastDate","length","lastDageCopy","newDates","addDates","addEventListener","Task","timeoutId","task","setTimeout","onDoubleClick","pulledTask","find","newTasks","filter","clearTimeout","title","TaskList","taskList","forEach","i","toString","Tasker","handleSignout","TaskEditor","Header","setMonth","src","arrow","alt","getFullYear","DateButton","checkedDate","Table","calendarDate","setCheckedDate","lastDay","firstDay","calendar","week","handleClick","btnDate","generateNumber","Math","random","fillStartMonthByEmpty","tmpDate","slice","fillMonthByDate","fillEndMonthByEmpty","Datepicker","data","id","DateEditor","datepickerDisplay","setDatepickerDisplay","dateInfoContent","Actions","btnName","TaskPage","initTask","description","setTask","App","exact","path","ReactDOM"],"mappings":"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","file":"static/js/main.1a16c0e5.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nconst app = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n});\n\nexport const database = app.database();\nexport const auth = app.auth();\nexport default app;\n","import './Loader.scss';\n\nfunction Loader() {\n  return <div className=\"loading\">loading...</div>;\n}\n\nexport default Loader;\n","import React, { useContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { auth, database } from '../firebase';\nimport Loader from '../components/UI/Loader/Loader';\n\nconst AuthContext = React.createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  function register(email, password) {\n    return auth.createUserWithEmailAndPassword(email, password);\n  }\n\n  function signin(email, password) {\n    return auth.signInWithEmailAndPassword(email, password);\n  }\n\n  function signout() {\n    return auth.signOut();\n  }\n\n  function readUserData(user) {\n    if (!user) {\n      return;\n    }\n    database.ref('users/'.concat(user.uid)).once('value', (snapshot) => {\n      const response = snapshot.val();\n      if (response instanceof Object) {\n        if (response.tasks) {\n          const parsedData = JSON.parse(response.tasks, (key, value) => {\n            if (key === 'date') return new Date(value);\n            return value;\n          });\n          setTasks(parsedData);\n        }\n      }\n    });\n  }\n\n  function writeUserData() {\n    const { uid } = currentUser;\n    const jsonStr = JSON.stringify(tasks);\n    database.ref('users/'.concat(uid)).set({ tasks: jsonStr });\n  }\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      setCurrentUser(user);\n      readUserData(user);\n      setLoading(false);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  const value = {\n    tasks,\n    currentUser,\n    setTasks,\n    signin,\n    register,\n    signout,\n    readUserData,\n    writeUserData,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>{loading ? <Loader /> : children}</AuthContext.Provider>\n  );\n}\n\nAuthProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\n\nexport default function PrivateRoute({\n  component: Component,\n  currentTask,\n  setCurrentTask,\n  currentDate,\n  setCurrentDate,\n  toDay,\n}) {\n  const { currentUser } = useAuth();\n\n  const render = () => {\n    const component = (\n      <Component\n        currentTask={currentTask}\n        setCurrentTask={setCurrentTask}\n        currentDate={currentDate}\n        setCurrentDate={setCurrentDate}\n        toDay={toDay}\n      />\n    );\n    return currentUser ? component : <Redirect to=\"/signin\" />;\n  };\n\n  return <Route render={render} />;\n}\n\nPrivateRoute.propTypes = {\n  component: PropTypes.func,\n  currentTask: PropTypes.object,\n  setCurrentTask: PropTypes.func,\n  currentDate: PropTypes.object,\n  setCurrentDate: PropTypes.func,\n  toDay: PropTypes.object,\n};\n","import './Button.scss';\n\nfunction Button(params) {\n  const { value, disabled } = params;\n  return <input className=\"button\" type=\"submit\" value={value} disabled={disabled} />;\n}\n\nexport default Button;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './Form.scss';\n\nfunction Form({ children, onSubmit }) {\n  const [user, setUser] = useState({\n    email: '',\n    password: '',\n  });\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setUser({ ...user, ...{ [name]: value } });\n  };\n\n  return (\n    <form className=\"form\" onSubmit={(event) => onSubmit(user, event)}>\n      <input\n        className=\"form__email\"\n        type=\"email\"\n        name=\"email\"\n        value={user.email}\n        placeholder=\"Email\"\n        onChange={handleChange}\n        required\n      />\n      <input\n        className=\"form__password\"\n        type=\"password\"\n        name=\"password\"\n        value={user.password}\n        placeholder=\"Password\"\n        onChange={handleChange}\n        required\n      />\n      {children}\n    </form>\n  );\n}\n\nForm.propTypes = {\n  children: PropTypes.node.isRequired || PropTypes.array,\n  onSubmit: PropTypes.func,\n};\n\nexport default Form;\n","import './Alert.scss';\n\nfunction Alert(params) {\n  const { value } = params;\n\n  if (value) {\n    return <div className=\"alert\">{params.value}</div>;\n  }\n\n  return null;\n}\n\nexport default Alert;\n","import './PasswordInput.scss';\nimport PropTypes from 'prop-types';\n\nfunction PasswordInput({ value, placeholder, onChange }) {\n  return (\n    <input\n      className=\"password-input\"\n      type=\"password\"\n      value={value}\n      onChange={onChange}\n      placeholder={placeholder}\n    />\n  );\n}\n\nPasswordInput.propTypes = {\n  value: PropTypes.string,\n  placeholder: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default PasswordInput;\n","import { Link, useHistory } from 'react-router-dom';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../UI/Button/Button';\nimport Form from '../UI/Form/Form';\nimport './Register.scss';\nimport { useAuth } from '../../contexts/AuthContext';\nimport Alert from '../UI/Alert/Alert';\nimport PasswordInput from '../UI/PasswordInput/PasswordInput';\n\nfunction Register() {\n  const { register } = useAuth();\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const history = useHistory();\n\n  const handleSubmit = async ({ email, password }, event) => {\n    event.preventDefault();\n    if (password !== confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n\n    try {\n      setError('');\n      setLoading(true);\n      await register(email, password);\n      history.push('/tasker');\n    } catch (err) {\n      setError(err.message);\n      setLoading(false);\n    }\n  };\n\n  const handleChange = (event) => setConfirmPassword(event.target.value);\n\n  return (\n    <div className=\"register\">\n      <div className=\"register__nav\">\n        <Link className=\"link\" to=\"/signin\">\n          <div className=\"register__arrow arrow\" />\n          Sign in\n        </Link>\n      </div>\n      <Alert value={error} />\n      <Form onSubmit={handleSubmit}>\n        <PasswordInput\n          value={confirmPassword}\n          onChange={handleChange}\n          placeholder=\"Confirm password\"\n        />\n        <Button disabled={loading} value=\"Register\" />\n      </Form>\n    </div>\n  );\n}\n\nRegister.propTypes = {\n  setUser: PropTypes.func,\n};\n\nexport default Register;\n","import { Link, useHistory } from 'react-router-dom';\nimport { useState } from 'react';\nimport 'firebase/auth';\nimport Form from '../UI/Form/Form';\nimport Alert from '../UI/Alert/Alert';\nimport './Signin.scss';\nimport Button from '../UI/Button/Button';\nimport { useAuth } from '../../contexts/AuthContext';\n\nfunction Signin() {\n  const { signin } = useAuth();\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  const handleSubmit = async ({ email, password }, event) => {\n    event.preventDefault();\n\n    try {\n      setError('');\n      setLoading(true);\n      await signin(email, password);\n      history.push('/tasker');\n    } catch (err) {\n      setError(err.message);\n      setLoading(null);\n    }\n  };\n\n  return (\n    <div className=\"signin\">\n      <div className=\"signin__nav\">\n        <Link className=\"link\" to=\"/register\">\n          Register\n          <div className=\"signin__arrow arrow\" />\n        </Link>\n      </div>\n\n      <Alert value={error} />\n      <Form onSubmit={handleSubmit}>\n        <Button disabled={loading} value=\"Sing in\" />\n      </Form>\n    </div>\n  );\n}\n\nexport default Signin;\n","export function startOfDay(date) {\n  date.setHours(0);\n  date.setMinutes(0);\n  date.setSeconds(0);\n  date.setMilliseconds(0);\n  return date;\n}\n\nexport function getNameDay(date) {\n  const days = ['Sun', 'Mon', 'Tue', 'Wen', 'Thu', 'Fri', 'Sat'];\n  return days[date.getDay()];\n}\n\nexport function getNameMonth(date) {\n  const months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n\n  return months[date.getMonth()];\n}\n\nexport function addZero(date) {\n  return date < 10 ? `0${date}` : date;\n}\n","import './Card.scss';\nimport PropTypes from 'prop-types';\nimport { useAuth } from '../../../../contexts/AuthContext';\nimport { getNameDay, startOfDay } from '../../../../date/date';\n\nfunction Card({ date, currentDate, setCurrentDate }) {\n  const { tasks } = useAuth();\n  const toDay = startOfDay(new Date());\n\n  const handleClick = () => {\n    setCurrentDate(date);\n  };\n\n  const checkPendingTasks = () => {\n    return tasks.some((item) => {\n      return item.date.getTime() === date.getTime() && !item.checked;\n    });\n  };\n\n  const checkFulfilledTasks = () => {\n    return tasks.some((item) => {\n      return item.date.getTime() === date.getTime() && item.checked;\n    });\n  };\n\n  const createDayClass = () => {\n    let dayClass = 'card__day';\n    if (+toDay === +date) {\n      dayClass += ' card__day_today';\n    }\n\n    if (+currentDate === +date) {\n      dayClass += ' card__day_current';\n    }\n    return dayClass;\n  };\n\n  return (\n    <button type=\"button\" className=\"card btn\" onClick={handleClick}>\n      <div className={createDayClass()}>\n        <span className=\"card__text\">{getNameDay(date)}</span>\n        <span className=\"card__number\">{date.getDate()}</span>\n      </div>\n      <div className=\"card__board\">\n        {checkPendingTasks() ? <div className=\"card__pending\" /> : null}\n        {checkFulfilledTasks() ? <div className=\"card__fulfilled\" /> : null}\n      </div>\n    </button>\n  );\n}\n\nCard.propTypes = {\n  date: PropTypes.object,\n  currentDate: PropTypes.object,\n  setCurrentDate: PropTypes.func,\n};\n\nexport default Card;\n","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './Calendar.scss';\nimport Card from './Card/Card';\nimport { startOfDay } from '../../../date/date';\n\nconst INITIAL_SCALE = 0;\nconst INCREMENT = 1;\n\nfunction createDates(date) {\n  const stopDay = date.getDate();\n  const result = [];\n  do {\n    result.push(new Date(date));\n    date.setDate(date.getDate() + INCREMENT);\n  } while (date.getDate() !== stopDay);\n\n  return result;\n}\n\nfunction Calendar({ currentDate, setCurrentDate }) {\n  const initDate = startOfDay(new Date());\n  const [dates, setDates] = useState(createDates(initDate));\n\n  const cards = dates.map((item) => {\n    return (\n      <Card key={item} date={item} currentDate={currentDate} setCurrentDate={setCurrentDate} />\n    );\n  });\n\n  const addDates = () => {\n    const target = document.querySelector('.calendar');\n    const maxScrollLeft = target.scrollWidth - target.clientWidth;\n    if (target.scrollLeft === maxScrollLeft) {\n      const lastDate = dates[dates.length - 1];\n      const lastDageCopy = new Date(lastDate);\n      lastDageCopy.setDate(lastDageCopy.getDate() + INCREMENT);\n      const newDates = createDates(lastDageCopy);\n      setDates([...dates, ...newDates]);\n    }\n  };\n\n  const enableScroll = (event) => {\n    const target = document.querySelector('.calendar');\n    const toLeft = event.deltaY < INITIAL_SCALE && target.scrollLeft > INITIAL_SCALE;\n    const hiddenWidth = target.scrollWidth - target.clientWidth;\n    const toRight = event.deltaY > INITIAL_SCALE && target.scrollLeft < hiddenWidth;\n\n    if (toLeft || toRight) {\n      event.preventDefault();\n      target.scrollLeft += event.deltaY;\n    }\n  };\n\n  const handleWheel = (event) => {\n    enableScroll(event);\n    addDates();\n  };\n\n  useEffect(() => {\n    const target = document.querySelector('.calendar');\n    target.addEventListener('wheel', handleWheel);\n  });\n\n  return <ul className=\"calendar\">{cards}</ul>;\n}\n\nCalendar.propTypes = {\n  tasks: PropTypes.array,\n  currentDate: PropTypes.object,\n  setCurrentDate: PropTypes.func,\n};\n\nexport default Calendar;\n","import './Task.scss';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { useAuth } from '../../../../contexts/AuthContext';\n\nfunction Task({ task, setCurrentTask }) {\n  const history = useHistory();\n  const { tasks, setTasks, writeUserData } = useAuth();\n  let timeoutId;\n  const delay = 200;\n\n  const handleChange = () => {\n    task.checked = !task.checked;\n    setTasks([...tasks]);\n  };\n\n  const handleClick = () => {\n    timeoutId = setTimeout(() => {\n      // eslint-disable-next-line no-useless-return\n      return;\n    }, delay);\n  };\n\n  const handleDoubleClick = () => {\n    const pulledTask = tasks.find((item) => item === task);\n    const newTasks = tasks.filter((item) => item !== task);\n\n    setCurrentTask(pulledTask);\n    setTasks(newTasks);\n    history.push('/task');\n    clearTimeout(timeoutId);\n  };\n\n  useEffect(() => {\n    return () => writeUserData();\n  }, []);\n\n  return (\n    <button type=\"button\" className=\"task\" onClick={handleClick} onDoubleClick={handleDoubleClick}>\n      <input\n        className=\"task__input\"\n        type=\"checkbox\"\n        checked={task.checked}\n        onChange={handleChange}\n      />\n      {task.title}\n    </button>\n  );\n}\n\nTask.propTypes = {\n  task: PropTypes.object,\n  setCurrentTask: PropTypes.func,\n};\n\nexport default Task;\n","import './TaskList.scss';\nimport PropTypes from 'prop-types';\nimport Task from './Task/Task';\nimport { useAuth } from '../../../contexts/AuthContext';\n\nfunction TaskList({ setCurrentTask, currentDate }) {\n  const { tasks } = useAuth();\n  const taskList = [];\n\n  tasks.forEach((item, i) => {\n    if (+item.date === +currentDate) {\n      const task = <Task key={i.toString()} task={item} setCurrentTask={setCurrentTask} />;\n      taskList.push(task);\n    }\n  });\n\n  return [\n    <div className=\"task-count\" key={22}>\n      {taskList.length} Tasks Today\n    </div>,\n    <ul className=\"task-list\" key={11}>\n      {taskList}\n    </ul>,\n  ];\n}\n\nTaskList.propTypes = {\n  setCurrentTask: PropTypes.func,\n  currentDate: PropTypes.object,\n};\n\nexport default TaskList;\n","import { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { useAuth } from '../../contexts/AuthContext';\nimport Calendar from './Calendar/Calendar';\nimport Alert from '../UI/Alert/Alert';\nimport './Tasker.scss';\nimport TaskList from './TaskList/TaskList';\n\nfunction Tasker({ currentTask, setCurrentTask, currentDate, setCurrentDate }) {\n  const [error, setError] = useState('');\n  const { signout } = useAuth();\n  const history = useHistory();\n\n  const handleSignout = async () => {\n    setError('');\n\n    try {\n      await signout();\n      history.push('/signin');\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  return (\n    <div className=\"tasker\">\n      <div className=\"header\">\n        Tasker\n        <button className=\"signout\" type=\"button\" onClick={handleSignout}>\n          Sign out\n        </button>\n      </div>\n      <Alert value={error} />\n      <Calendar currentDate={currentDate} setCurrentDate={setCurrentDate} />\n      <TaskList\n        currentTask={currentTask}\n        setCurrentTask={setCurrentTask}\n        currentDate={currentDate}\n        setCurrentDate={setCurrentDate}\n      />\n      <Link className=\"tasker__link\" to=\"/task\">\n        + Add a New Task\n      </Link>\n    </div>\n  );\n}\n\nTasker.propTypes = {\n  currentTask: PropTypes.object,\n  setCurrentTask: PropTypes.func,\n  currentDate: PropTypes.object,\n  setCurrentDate: PropTypes.func,\n};\n\nexport default Tasker;\n","import './TaskEditor.scss';\nimport PropTypes from 'prop-types';\n\nfunction TaskEditor({ checked, title, onChange }) {\n  return (\n    <div className=\"task\">\n      <input\n        className=\"task__checkbox\"\n        type=\"checkbox\"\n        name=\"checkbox\"\n        checked={checked}\n        onChange={onChange}\n      />\n      <input className=\"task__text\" type=\"text\" value={title} name=\"title\" onChange={onChange} />\n    </div>\n  );\n}\n\nTaskEditor.propTypes = {\n  checked: PropTypes.bool,\n  title: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default TaskEditor;\n","export default __webpack_public_path__ + \"static/media/arrow.23e24faa.svg\";","import PropTypes from 'prop-types';\nimport './Header.scss';\nimport arrow from '../../../../img/arrow.svg';\nimport { getNameMonth } from '../../../../date/date';\n\nfunction Header({ date, setDate }) {\n  const nextMonth = () => {\n    setDate(new Date(date.setMonth(date.getMonth() + 1)));\n  };\n\n  const previousMonth = () => {\n    setDate(new Date(date.setMonth(date.getMonth() - 1)));\n  };\n\n  return (\n    <div className=\"datepicker-header\">\n      <button type=\"button\" className=\"datepicker-header__btn btn\" onClick={previousMonth}>\n        <img className=\"datepicker-header__arrow_right\" src={arrow} alt=\"\" />\n      </button>\n      <div className=\"datepicker-header__date\">{`${getNameMonth(date)} ${date.getFullYear()}`}</div>\n      <button type=\"button\" className=\"datepicker-header__btn btn\" onClick={nextMonth}>\n        <img src={arrow} alt=\"\" />\n      </button>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  date: PropTypes.object,\n  setDate: PropTypes.func,\n};\n\nexport default Header;\n","import './DateButton.scss';\nimport PropTypes from 'prop-types';\nimport { startOfDay } from '../../../../../date/date';\n\nfunction DateButton({ date, onClick, checkedDate }) {\n  const toDay = startOfDay(new Date());\n  let className = 'date-btn';\n\n  if (+date === +checkedDate) {\n    className += ' date-btn__checked';\n  } else if (+toDay === +date) {\n    className += ' date-btn__today';\n  }\n\n  return (\n    <button className={className} type=\"button\" onClick={() => onClick(date)}>\n      {date.getDate()}\n    </button>\n  );\n}\n\nDateButton.propTypes = {\n  date: PropTypes.object,\n  onClick: PropTypes.func,\n  checkedDate: PropTypes.object,\n};\n\nexport default DateButton;\n","import './Table.scss';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport DateButton from './DateButton/DateButton';\n\nconst WEEK_DAYS = 7;\nconst SUN = 0;\nconst SAT = 6;\nconst MONTH_FIRST_NUMBER = 1;\n\nfunction Table({ date, onChange }) {\n  const calendarDate = new Date(date);\n  const [checkedDate, setCheckedDate] = useState(new Date(date));\n  const lastDate = new Date(calendarDate.getFullYear(), calendarDate.getMonth() + 1, 0).getDate();\n  const lastDay = new Date(calendarDate.getFullYear(), calendarDate.getMonth(), lastDate).getDay();\n  const firstDay = new Date(calendarDate.getFullYear(), calendarDate.getMonth(), 1).getDay();\n  const calendar = [];\n  let week = [];\n\n  const handleClick = (btnDate) => {\n    setCheckedDate(new Date(btnDate));\n    onChange({ target: { name: 'date', value: btnDate } });\n  };\n\n  const generateNumber = () => {\n    return Math.random();\n  };\n\n  const fillStartMonthByEmpty = () => {\n    if (firstDay !== SUN) {\n      for (let i = 0; i < firstDay; i++) week.push(<td key={generateNumber()} />);\n    } else {\n      for (let i = 0; i < SUN; i++) week.push(<td key={generateNumber()} />);\n    }\n  };\n\n  const fillMonthByDate = () => {\n    for (let i = MONTH_FIRST_NUMBER; i <= lastDate; i++) {\n      const tmpDate = new Date(calendarDate.getFullYear(), calendarDate.getMonth(), i);\n\n      week.push(\n        <td key={generateNumber()}>\n          <DateButton date={tmpDate} checkedDate={checkedDate} onClick={handleClick} />\n        </td>,\n      );\n\n      if (tmpDate.getDay() === SAT) {\n        calendar.push(<tr key={generateNumber()}>{week.slice()}</tr>);\n        week = [];\n      }\n    }\n  };\n\n  const fillEndMonthByEmpty = () => {\n    if (lastDay !== SUN) {\n      for (let i = lastDay; i < WEEK_DAYS; i++) week.push(<td key={generateNumber()} />);\n    }\n  };\n\n  fillStartMonthByEmpty();\n  fillMonthByDate();\n  fillEndMonthByEmpty();\n  calendar.push(<tr key={generateNumber()}>{week}</tr>);\n\n  return <tbody>{calendar}</tbody>;\n}\n\nTable.propTypes = {\n  date: PropTypes.object,\n  onChange: PropTypes.func,\n};\n\nexport default Table;\n","import './Datepicker.scss';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport Header from './Header/Header';\nimport Table from './Table/Table';\n\nfunction Datepicker({ data, onChange }) {\n  const [date, setDate] = useState(new Date(data));\n\n  return (\n    <div className=\"datepicker\" id=\"datepicker\">\n      <Header date={date} setDate={setDate} />\n      <table>\n        <thead>\n          <tr>\n            <th>Sun</th>\n            <th>Mon</th>\n            <th>Tue</th>\n            <th>Wen</th>\n            <th>Thu</th>\n            <th>Fri</th>\n            <th>Sat</th>\n          </tr>\n        </thead>\n\n        <Table date={date} onChange={onChange} />\n      </table>\n    </div>\n  );\n}\n\nDatepicker.propTypes = {\n  data: PropTypes.object,\n  onChange: PropTypes.func,\n};\n\nexport default Datepicker;\n","import './DateEditor.scss';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { addZero } from '../../../date/date';\nimport Datepicker from '../../UI/Datepicker/Datepicker';\n\nfunction DateEditor({ task, handleChange }) {\n  const [datepickerDisplay, setDatepickerDisplay] = useState(false);\n  const { date } = task;\n  const dateInfoContent = `${addZero(date.getMonth() + 1)}/${addZero(\n    date.getDate(),\n  )}/${date.getFullYear()}`;\n\n  return (\n    <div>\n      <div className=\"date-control\">\n        <div className=\"date-control__info\" type=\"text\">\n          {dateInfoContent}\n        </div>\n        <input\n          type=\"button\"\n          value=\"date\"\n          onClick={() => {\n            setDatepickerDisplay(!datepickerDisplay);\n          }}\n        />\n      </div>\n      {datepickerDisplay ? (\n        <Datepicker name=\"date\" data={task.date} onChange={handleChange} />\n      ) : null}\n    </div>\n  );\n}\n\nDateEditor.propTypes = {\n  task: PropTypes.object,\n  handleChange: PropTypes.func,\n};\n\nexport default DateEditor;\n","import './Actions.scss';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { useAuth } from '../../../contexts/AuthContext';\n\nfunction Actions({ currentTask, setCurrentTask, task }) {\n  const { tasks, setTasks } = useAuth();\n  const history = useHistory();\n  const btnName = currentTask ? 'Update' : 'Save';\n\n  const handleClick = ({ target: { name } }) => {\n    if (name !== 'delete') {\n      setTasks(() => [...tasks, { ...task }]);\n    }\n\n    setCurrentTask(null);\n    history.push('/tasker');\n  };\n\n  return (\n    <div className=\"actions\">\n      <button className=\"delete-btn btn\" type=\"button\" name=\"delete\" onClick={handleClick}>\n        Delete\n      </button>\n      <button className=\"save-btn btn\" type=\"button\" name={btnName} onClick={handleClick}>\n        {btnName}\n      </button>\n    </div>\n  );\n}\n\nActions.propTypes = {\n  currentTask: PropTypes.object,\n  setCurrentTask: PropTypes.func,\n  task: PropTypes.object,\n};\n\nexport default Actions;\n","import { useHistory } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './TaskPage.scss';\nimport EditTask from './TaskEditor/TaskEditor';\nimport { useAuth } from '../../contexts/AuthContext';\nimport DateEditor from './DateEditor/DateEditor';\nimport { startOfDay } from '../../date/date';\nimport Actions from './Actions/Actions';\n\nfunction TaskPage({ currentTask, setCurrentTask, currentDate }) {\n  const initTask = {\n    checked: false,\n    title: 'Title',\n    description: 'description',\n    date: startOfDay(currentDate),\n  };\n\n  const { tasks, setTasks, writeUserData } = useAuth();\n  const [task, setTask] = useState(currentTask || initTask);\n  const history = useHistory();\n  const textContent = \"Today's Task\";\n\n  const handleChange = ({ target: { name, value, checked } }) => {\n    if (name === 'checkbox') {\n      setTask({ ...task, checked });\n    } else {\n      setTask({ ...task, [name]: value });\n    }\n  };\n\n  const handleBackBtn = () => {\n    if (currentTask) {\n      setTasks([...tasks, { ...currentTask }]);\n      setCurrentTask(null);\n    }\n\n    history.push('/tasker');\n  };\n\n  useEffect(() => {\n    return () => writeUserData();\n  });\n\n  return (\n    <div className=\"task-page\">\n      <div className=\"task-page__container\">\n        <div className=\"task-page__nav\">\n          <button type=\"button\" name=\"back\" className=\"task-page__back\" onClick={handleBackBtn}>\n            <div className=\"task-page__arrow arrow\" />\n            <div className=\"text_nowrap\">{textContent}</div>\n          </button>\n        </div>\n        <EditTask checked={task.checked} title={task.title} onChange={handleChange} />\n        <textarea\n          className=\"task-page__description\"\n          name=\"description\"\n          value={task.description}\n          onChange={handleChange}\n        />\n        <DateEditor task={task} handleChange={handleChange} />\n      </div>\n      <Actions currentTask={currentTask} setCurrentTask={setCurrentTask} task={task} />\n    </div>\n  );\n}\n\nTaskPage.propTypes = {\n  currentTask: PropTypes.object,\n  setCurrentTask: PropTypes.func,\n  currentDate: PropTypes.object,\n};\n\nexport default TaskPage;\n","import { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.scss';\nimport PrivateRoute from './components/PrivateRouter';\nimport Register from './components/Register/Register';\nimport Signin from './components/Signin/Signin';\nimport Tasker from './components/Tasker/Tasker';\nimport TaskPage from './components/TaskPage/TaskPage';\nimport { AuthProvider } from './contexts/AuthContext';\nimport { startOfDay } from './date/date';\n\nfunction App() {\n  const [currentTask, setCurrentTask] = useState();\n  const [currentDate, setCurrentDate] = useState(startOfDay(new Date()));\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"container\">\n        <Router>\n          <AuthProvider>\n            <Switch>\n              <PrivateRoute\n                exact\n                path=\"/tasker\"\n                component={Tasker}\n                setCurrentTask={setCurrentTask}\n                currentDate={currentDate}\n                setCurrentDate={setCurrentDate}\n              />\n              <PrivateRoute\n                path=\"/task\"\n                component={TaskPage}\n                currentTask={currentTask}\n                setCurrentTask={setCurrentTask}\n                currentDate={currentDate}\n              />\n              <Route path=\"/signin\" component={Signin} />\n              <Route path=\"/register\" component={Register} />\n            </Switch>\n          </AuthProvider>\n        </Router>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}